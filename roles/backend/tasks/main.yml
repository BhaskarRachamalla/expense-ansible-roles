- name: disable nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs latest version
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: installed
  loop: 
  - nodejs
  - mysql

- name: adduser expense
  ansible.builtin.user:
    name: expense

- name: create directory
  ansible.builtin.file:
    path: /app
    state: directory

- name: download code
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip

- name: unzip code
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes

- name: install npm packages
  ansible.builtin.command: npm install 
  args:
    chdir: /app

- name: copy backend service
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: install python mysql dependencies
  ansible.builtin.pip:
    name:
    - PyMySQL
    - cryptography
    executable: pip3.9 # pip3.11 if python version is 3.11

- name: import sql data
  community.mysql.mysql_db:
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    login_host: "{{ login_host }}"
    target: /app/schema/backend.sql
    state: import
    name: all


- name: reload daemon
  ansible.builtin.systemd_service:
    daemon_reload: true


- name: start backend
  ansible.builtin.service:
    name: backend
    state: started
    enabled: yes